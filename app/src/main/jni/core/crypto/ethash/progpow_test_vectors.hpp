// ethash: C/C++ implementation of Ethash, the Ethereum Proof of Work algorithm.
// Copyright 2018-2019 Pawel Bylica.
// Licensed under the Apache License, Version 2.0.

/// @file
/// ProgPoW test vectors.

#pragma once

namespace  // In anonymous namespace to allow including in multiple compilation units.
{
/// Defines a test case for ProgPoW hash() function.
struct progpow_hash_test_case
{
    int block_number;
    const char* header_hash_hex;
    const char* nonce_hex;
    const char* mix_hash_hex;
    const char* final_hash_hex;
};

progpow_hash_test_case progpow_hash_test_cases[] = {
    {0, "0000000000000000000000000000000000000000000000000000000000000000", "0000000000000000",
        "f4ac202715ded4136e72887c39e63a4738331c57fd9eb79f6ec421c281aa8743",
        "b3bad9ca6f7c566cf0377d1f8cce29d6516a96562c122d924626281ec948ef02"},
    {49, "63155f732f2bf556967f906155b510c917e48e99685ead76ea83f4eca03ab12b", "0000000006ff2c47",
        "8f744dec9140938453c8a502a489861aedec7e98ce7e11b10a3b661940c38786",
        "ca0c365f1290ede4ee0d19cab08cd827030425ae8aba96b5248faafe732f1f80"},
    {50, "9e7248f20914913a73d80a70174c331b1d34f260535ac3631d770e656b5dd922", "00000000076e482e",
        "bd772e573609acead3b0f27d7935022ea0bf72f22ecf0980f0c21a74cc2fa3ef",
        "75439f6c6e153d3c798309f01ba37e7a284d172f50841c7b523e81c1b8247083"},
    {99, "de37e1824c86d35d154cf65a88de6d9286aec4f7f10c3fc9f0fa1bcc2687188d", "000000003917afab",
        "18a5d2f1eaa3df5a54f254c3f90bfa8e40c63913664175c93a9e5136f4dc7c5c",
        "2618185c024ad29fd75bc350da388cc0d47cdebbd6798400f17692a7ccf3314c"},
    {29950, "ac7b55e801511b77e11d52e9599206101550144525b5679f2dab19386f23dcce", "005d409dbc23a62a",
        "d98cd262f73f9e110d994e592ad793ffca5fa92d8aff0e6f40fe3e84940e09e5",
        "8ec8a0486e759c59c6f7ba586450dc2a5c8c3586b52345efb9b604fa82f40f65"},
    {29999, "e43d7e0bdc8a4a3f6e291a5ed790b9fa1a0948a2b9e33c844888690847de19f5", "005db5fa4c2a3d03",
        "53979a1e55d7b1987664570920a3d9121052f06326b99c6698b38255ed419003",
        "de03c1354159e07cf804ecc9a53f82b0187dd4a24837d20e56cae28b65c35eb0"},
    {30000, "d34519f72c97cae8892c277776259db3320820cb5279a299d0ef1e155e5c6454", "005db8607994ff30",
        "ec3eed8a744b1950ae72439e8d28a47b868f4cdc26e5c37084e441cceb289c21",
        "a717a28081999625860cbb09262dbbcc6090427411a5a3c60fb86a0ded8d369e"},
    {30049, "8b6ce5da0b06d18db7bd8492d9e5717f8b53e7e098d9fef7886d58a6e913ef64", "005e2e215a8ca2e7",
        "ed3764d1cf0abc3798c594a372679dd076f7dda15b552e7ec83d3ba8b27cbe0c",
        "dd85d293db9b1063c6428ac9ca74e8d5d4d9fee49e0123bafb914fa787f58e89"},
    {30050, "c2c46173481b9ced61123d2e293b42ede5a1b323210eb2a684df0874ffe09047", "005e30899481055e",
        "732a4c5f7de1cc6d2a3702e9ea717b4f9da0de66e75897a2d5dc6cf407e883fc",
        "4e83a686a5390b8105a261c4c1480b23a17938d4d029d1239042be7515e980fa"},
    {30099, "ea42197eb2ba79c63cb5e655b8b1f612c5f08aae1a49ff236795a3516d87bc71", "005ea6aef136f88b",
        "be8789da582670b3b5091d3693b7584b5a554cd258c9a3f299645cfaf13acff9",
        "72a6b01403faf90b2e74cb28920e953016d2c04f3e22d64aa4712ed00b5b6681"},
    {59950, "49e15ba4bf501ce8fe8876101c808e24c69a859be15de554bf85dbc095491bd6", "02ebe0503bd7b1da",
        "3d1093e05b7ac6f23bda5afecf36f01379f05df06a28bcefd3459b70941bbc41",
        "56c9fefbfe93eac6de18b1bd4e42d6bf784f9dc5a112955d2ffa6d5fb3cc0657"},
    {59999, "f5c50ba5c0d6210ddb16250ec3efda178de857b2b1703d8d5403bd0f848e19cf", "02edb6275bd221e3",
        "855c62aba873a0955345556f2ba33cb1d74b7d42067402e6ec145dd031087b23",
    "116053ccb7866e23df4263a359794fa84afceb0d11d97cb9389ffa763b7be43a"},
    {170915, "5b3e8dfa1aafd3924a51f33e2d672d8dae32fa528d8b1d378d6e4db0ec5d665d", "0000000044975727",
                "d381b7f0b978fc2dd9ba2b3577c42d5968e05d880b689843b5278ba8d8cc5009",
                "0000e3e4baac980059399694a6d7bab1fe473cd0214202fea72018c36849f82e"},

};
}  // namespace
